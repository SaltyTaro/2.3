// test/utils/mockData.js

/**
 * Mock data for testing
 */
const mockData = {
    // Mainnet addresses
    WETH_ADDRESS: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    DAI_ADDRESS: "0x6B175474E89094C44Da98b954EedeAC495271d0F",
    USDC_ADDRESS: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
    UNISWAP_ROUTER_ADDRESS: "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    AAVE_LENDING_POOL_ADDRESS: "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9",
    
    // Uniswap pairs
    WETH_DAI_PAIR: "0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11",
    WETH_USDC_PAIR: "0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc",
    DAI_USDC_PAIR: "0xAE461cA67B15dc8dc81CE7615e0320dA1A9aB8D5",
    
    // Whale addresses (accounts with lots of tokens)
    WETH_WHALE: "0xF977814e90dA44bFA03b6295A0616a897441aceC", // Binance wallet
    DAI_WHALE: "0x47ac0Fb4F2D84898e4D9E7b4DaB3C24507a6D503", // Binance wallet
    USDC_WHALE: "0x0A59649758aa4d66E25f08Dd01271e891fe52199", // Maker: PSM-USDC-A
    
    // Mock victim transactions
    mockVictimTransactions: [
      {
        hash: "0x1234567890123456789012345678901234567890123456789012345678901234",
        blockNumber: 15000000,
        from: "0xf5213a6a2f0890321712520b8048d9886c1a9900",
        to: "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
        value: "0",
        gasPrice: "50000000000",
        input: "0x38ed1739000000000000000000000000000000000000000000000004da58c9a874eb65c8c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000079a45f2d7b97b9526147d45cb9025082d754ef400000000000000000000000000000000000000000000000000000000624af9e8000000000000000000000000000000000000000000000000000000000000000200000000000000000000000009ae49c0d7f8f9ef4b864e004fe86ac8294e20950000000000000000000000000979d7b65a2451d140158fec44a4fb3c2170b2fb0"
      },
      {
        hash: "0x2345678901234567890123456789012345678901234567890123456789012345",
        blockNumber: 15000010,
        from: "0x61edcdf5bb737adffe5043706e7c5bb1f1a56eea",
        to: "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
        value: "0",
        gasPrice: "55000000000",
        input: "0x38ed17390000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f5213a6a2f0890321712520b8048d9886c1a99000000000000000000000000000000000000000000000000000000000624af9fe000000000000000000000000000000000000000000000000000000000000000200000000000000000000000009ae49c0d7f8f9ef4b864e004fe86ac8294e20950000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
      }
    ],
    
    // Mock opportunity data
    mockOpportunity: {
      victimTx: "0x1234567890123456789012345678901234567890123456789012345678901234",
      router: "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
      path: [
        "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", // WETH
        "0x6B175474E89094C44Da98b954EedeAC495271d0F"  // DAI
      ],
      amountIn: "5000000000000000000", // 5 ETH
      deadline: Math.floor(Date.now() / 1000) + 3600, // 1 hour
      pairAddress: "0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11",
      estimatedProfit: "50000000000000000", // 0.05 ETH
      confidence: 0.85
    },
    
    // Mock sandwich parameters
    mockSandwichParams: {
      flashLoanAmount: "10000000000000000000", // 10 ETH
      frontRunAmount: "2000000000000000000", // 2 ETH
      backRunAmount: "1900000000000000000", // 1.9 ETH
      expectedProfit: "50000000000000000", // 0.05 ETH
      netProfit: "40000000000000000", // 0.04 ETH
      gasPrice: "60000000000", // 60 Gwei
      gasLimit: "500000",
      profitable: true,
      confidence: 0.85
    }
  };
  
  module.exports = { mockData };